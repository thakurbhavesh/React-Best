import React, { useState } from "react";
import axios from "axios";
import Modal from "react-modal";

// Style for Modal
const customModalStyles = {
  content: {
    top: "50%",
    left: "50%",
    right: "auto",
    bottom: "auto",
    marginRight: "-50%",
    transform: "translate(-50%, -50%)",
    padding: "20px",
    borderRadius: "10px",
    boxShadow: "0 4px 10px rgba(0, 0, 0, 0.2)",
    textAlign: "center",
  },
  overlay: {
    backgroundColor: "rgba(0, 0, 0, 0.5)",
  },
};

// Component
const TenorGifPicker = () => {
  const [gifs, setGifs] = useState([]);
  const [selectedGif, setSelectedGif] = useState(null);

  // Fetch GIFs based on query
  const fetchGifs = async (query) => {
    if (!query) return;
    const response = await axios.get(
      `https://g.tenor.com/v1/search?q=${query}&key=LIVDSRZULELA&limit=10`
    );
    setGifs(response.data.results);
  };

  // Handle selecting a GIF
  const handleGifClick = (gif) => {
    setSelectedGif(gif.media[0].gif.url);
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial, sans-serif" }}>
      <h1 style={{ textAlign: "center", color: "#4CAF50" }}>GIF Picker</h1>
      <input
        type="text"
        placeholder="Search GIFs"
        onChange={(e) => fetchGifs(e.target.value)}
        style={{
          display: "block",
          margin: "20px auto",
          padding: "10px",
          width: "80%",
          border: "1px solid #ddd",
          borderRadius: "5px",
          fontSize: "16px",
        }}
      />
      <div
        style={{
          display: "flex",
          flexWrap: "wrap",
          gap: "10px",
          justifyContent: "center",
        }}
      >
        {gifs.map((gif) => (
          <img
            key={gif.id}
            src={gif.media[0].gif.url}
            alt={gif.title}
            style={{
              cursor: "pointer",
              width: "120px",
              height: "120px",
              borderRadius: "8px",
              transition: "transform 0.2s",
            }}
            onClick={() => handleGifClick(gif)}
            onMouseOver={(e) => (e.target.style.transform = "scale(1.1)")}
            onMouseOut={(e) => (e.target.style.transform = "scale(1)")}
          />
        ))}
      </div>

      {/* Modal to show selected GIF */}
      <Modal
        isOpen={!!selectedGif}
        onRequestClose={() => setSelectedGif(null)}
        style={customModalStyles}
        ariaHideApp={false}
      >
        <h2>Selected GIF</h2>
        {selectedGif && (
          <img
            src={selectedGif}
            alt="Selected GIF"
            style={{ maxWidth: "100%", borderRadius: "10px" }}
          />
        )}
        <button
          onClick={() => setSelectedGif(null)}
          style={{
            marginTop: "20px",
            padding: "10px 20px",
            backgroundColor: "#4CAF50",
            color: "white",
            border: "none",
            borderRadius: "5px",
            cursor: "pointer",
          }}
        >
          Close
        </button>
      </Modal>
    </div>
  );
};

export default TenorGifPicker;
